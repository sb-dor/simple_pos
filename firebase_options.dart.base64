// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError('DefaultFirebaseOptions are not supported for this platform.');
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCKUfhSVm7I1G1K6p3yazuCrB2fIg_9qkg',
    appId: '1:621355111997:web:02d56c615ffeab53a2fc54',
    messagingSenderId: '621355111997',
    projectId: 'pos-app-41810',
    authDomain: 'pos-app-41810.firebaseapp.com',
    storageBucket: 'pos-app-41810.firebasestorage.app',
    measurementId: 'G-Q944WMF3FC',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCHGHprHzcLVL5g9S2fjb0tlbb4olLSORA',
    appId: '1:621355111997:android:c1e2dacb165884c0a2fc54',
    messagingSenderId: '621355111997',
    projectId: 'pos-app-41810',
    storageBucket: 'pos-app-41810.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyB0hhFPDxk4IHmqDcLmlXYCVGGHR95IGfM',
    appId: '1:621355111997:ios:ba6397ad030a8221a2fc54',
    messagingSenderId: '621355111997',
    projectId: 'pos-app-41810',
    storageBucket: 'pos-app-41810.firebasestorage.app',
    iosBundleId: 'com.sbdor.simplepos',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyB0hhFPDxk4IHmqDcLmlXYCVGGHR95IGfM',
    appId: '1:621355111997:ios:ba6397ad030a8221a2fc54',
    messagingSenderId: '621355111997',
    projectId: 'pos-app-41810',
    storageBucket: 'pos-app-41810.firebasestorage.app',
    iosBundleId: 'com.sbdor.simplepos',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyCKUfhSVm7I1G1K6p3yazuCrB2fIg_9qkg',
    appId: '1:621355111997:web:b9576d19993ad2fea2fc54',
    messagingSenderId: '621355111997',
    projectId: 'pos-app-41810',
    authDomain: 'pos-app-41810.firebaseapp.com',
    storageBucket: 'pos-app-41810.firebasestorage.app',
    measurementId: 'G-PT2L6T0TQH',
  );
}
